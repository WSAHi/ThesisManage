<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">

<span style="margin-left:25px"></span><font size=3 color=red>蓝色文字是系统自动修改的结果，仅供参考，如需使用请加工润色！</font><br><br><span style="margin-left:25px"></span>摘 要随着“互联网+”概念的推广和普及，越来越多的行业和互联网产生了密不可分的联系。
<br><br>
<span style="margin-left:25px"></span>“互联网+”的影响、网络和计算机的普及，使得人们的越来越多的工作和生活娱乐可以在互联网的世界中完成。大学校园更是这股潮流的起源之地，大学生是这种新鲜事物的最先接受者和发扬人，不仅自己的生活与互联网密不可分，许多在学校里的工作也离不开互联网。但是仍有一些工作仍是在线下完成的。本次设计的“毕业设计选题系统”便将之前对于毕业生的毕业设计选题繁琐的线下工作转移到线上，通过互联网来进行毕业生的选课和老师的课题上传。“毕业设计选题系统”设计的目的一方面是为了解决之前毕业生与老师之间对于课题选择的沟通不畅，
<br><br>
<span style="margin-left:25px"></span>导致效率低下甚至影响学生毕业，通过此系统，学生可以及时查看课题并且选择自己喜欢的课题；另一方面也是顺应时代潮流，将之前繁琐低效的线下工作转移到互联网上，减少了学校教务处和教师的工作量和学校的财政支出，并且使学校紧跟时代潮流，使学校的现代化水平始终保持在时代前沿。“毕业设计选题系统”采用 B/ S模式使用当前流行的 ASP. NET网络编程技术和三层架构以及 Bootstrap前端框架，
<br><br>
<span style="margin-left:25px"></span>通过在线上管理毕业设计课题的申报，审核和管理以及选择，避免了以前手动操作效率低下，步骤繁琐的弊端，同时通过互联网也使得数据的管理更加方便快捷。关键词：
<br><br>
<span style="margin-left:25px"></span>毕业设计选题管理系统；B/S模式；三层架构；管理/查询/添加/删除/修改；ASP.NETABSTRACT
<br><br>
<span style="margin-left:25px"></span>With the ”Internet plus” concept and the popularization， more and more industries and the Internet have inextricably linked.
<br><br>
<span style="margin-left:25px"></span> ”Internet plus” the impact of the network， and the popularization of computer， the completion of more and more people work and live entertainment in the Internet world. University campus is the origin of this trend， college students are the novelty of the first receiver and develop people， not only their own life is inseparable with the Internet， many work in school is also inseparable from the Internet. But there are still some jobs that are done online. The design of the graduation design topic- selecting system” will before for graduates of the graduate design topics tedious line work transferred to the line， through the Internet for graduates of the course and teacher upload issue.” Graduation design topic system” design is to solve before between graduates and teachers for the subject selection of communication is not smooth，
<br><br>
<span style="margin-left:25px"></span> resulting in inefficient even affected student graduation， through this system， students can timely view the subject and choose their favorite subject; on the other hand also conform to the trend of the times， before the tedious inefficient line jobs to the Internet， reducing the workload of academic schools and teachers and school expenditure， and make the school closely follow the trend of the times， the modernization level of the school always keep in the forefront of the times.” Graduation design topic- selecting system” using B/ S mode using the current popular network programming asp.
<br><br>
<span style="margin-left:25px"></span> net technology and three tier architecture and bootstrap and the front end of the frame， through the declaration of the online management of graduation design topic， audit and management and selection， to avoid the previous manual operation efficiency is low， the defects of complicated steps， also through the Internet also makes data management more convenient.Key words:
<br><br>
<span style="margin-left:25px"></span> Graduation design topic selection system;B/S Mode; Three-tier architecture;Management/Search/Add/Delete/Update;
<br><br>
<span style="margin-left:25px"></span>ASP.NET济南大学毕业设计
<br><br>
<span style="margin-left:25px"></span>- II -
<br><br>
<span style="margin-left:25px"></span>济南大学毕业设计
<br><br>
<span style="margin-left:25px"></span>~ 1 ~
<br><br>
<span style="margin-left:25px"></span>1 前言
<br><br>
<span style="margin-left:25px"></span>1.1 系统开发的背景
<br><br>
<span style="margin-left:25px"></span>毕业设计是大学生本科阶段最后一项考验，是大学生走向社会，走向工作的前沿岗哨。
<br><br>
<span style="margin-left:25px"></span>经过毕业设计的洗礼，学生将会把四年来学过的所有知识进行整合，然后做出一个令人满意的毕业设计作品。毕业设计选题的管理也是学校教学工作中的重要阶段，每年大量的毕业生都要进行毕业设计课题的选择，
<br><br>
<span style="margin-left:25px"></span>特别是最近几年来，随着本科招生的扩招，每年的毕业生人数都在不断的增加，所以学校的毕业设计选题的管理工作越来越重。传统的线下工作的管理模式存在成本高、效率低、工作重复以及难以维护等弊端。针对这些缺点，结合最近比较火的“互联网+”的概念，将线下的毕业设计管理工作转移到线上，同时基于毕业设计选题管理工作的选题灵活、指导老师较多、进度要求严格，工作量大以及学生由于各种原因在不同的地点等特点，设计了一个基于 B/ S模式，利用三层架构的网上毕业设计选题管理系统。通过此系统，极大的方便了师生的工作和学习。1.2 系统开发的目的与意义:
<br><br>
<span style="margin-left:25px"></span>随着科学技术的发展和时代进步，互联网与人们的生活和工作的关系越来越密切，当前人们的很多工作和生活都发生在互联网的世界中。
<br><br>
<span style="margin-left:25px"></span>其中信息管理系统更是变成了这其中的重中之重。伴随着信息管理系统的发展，数据库管理技术也越来越成熟。
<br><br>
<span style="margin-left:25px"></span>学校中的不少信息数据已经从原来的传统手工管理变成了线上通过信息管理系统来管理。但是毕业生的毕业设计选题的工作仍然在线下进行，所以将毕业生毕业设计选题的工作转移到线上便成了学校的首要工作。该系统实现了毕业设计选题管理的系统化、标准化、无纸化。成功给学生和教师以及学校的管理人员减负，提高了工作效率和管理水平。此次设计的毕业设计选题系统基于B/S模式，只需要联网即可在浏览器上登录进行工作。
<br><br>
<span style="margin-left:25px"></span>本系统采用三层架构，可以十分方便的添加删除或者修改系统功能，易于升级和维护。2 可行性分析
<br><br>
<span style="margin-left:25px"></span>系统可行性分析是在进行了系统初步调查和需求分析的基础上，明确了存在的主要问题和建立毕业设计选题管理系统的初步设想，
<br><br>
<span style="margin-left:25px"></span>进一步对技术可行性、操作可行性和经济可行性等因素进行研究分析。2.1 技术可行性
<br><br>
<span style="margin-left:25px"></span>毕业设计选题系统是数据库管理系统与C#编程的结合产物，将毕业设计课题和论文存入数据库中，通过程序调用这些信息展示给需要的人。
<br><br>
<span style="margin-left:25px"></span>就目前阶段来说对数据的增删改查，该系统可以实现。2.2 操作可行性
<br><br>
<span style="margin-left:25px"></span>此系统采用B/S模式，将工作从线下搬到线上，只要有互联网和浏览器，就能进行毕业设计选题管理的相关工作。
<br><br>
<span style="margin-left:25px"></span>现阶段来说，电脑和互联网都已经普及。2.3 经济可行性
<br><br>
<span style="margin-left:25px"></span>此系统的目标为采用成熟的信息技术和手段，加强毕业设计中对于课题选择和论文上传下载的管理与应用，
<br><br>
<span style="margin-left:25px"></span>提高了毕业设计管理工作的现代化水平、工作效率、管理水平、降低了管理成本。3 需求分析
<br><br>
<span style="margin-left:25px"></span>3.1 系统需求
<br><br>
<span style="margin-left:25px"></span>3.1.1 综合描述
<br><br>
<span style="margin-left:25px"></span>毕业设计选题的管理是毕业生管理工作中不可缺少的一部分，对于毕业生和教师来说都非常重要，但长期以来人们传统的线下工作模式，操作流程繁琐，效率低下。
<br><br>
<span style="margin-left:25px"></span>通过本系统教师在上传课题或学生上传自定义课题之后，管理员进行审核，审核通过之后，学生可以选择教师上传的课题或者自己上传的课题审核通过之后默认选择该课题。
<br><br>
<span style="margin-left:25px"></span>根据所选课题进行毕业设计，最后上传毕业论文。3.1.2 用户群和特征
<br><br>
<span style="margin-left:25px"></span>表3.1.2.1 用户群和特征表
<br><br>
<span style="margin-left:25px"></span>3.1.3 系统的运行环境
<br><br>
<span style="margin-left:25px"></span>操作系统：
<br><br>
<span style="margin-left:25px"></span>Windows10；服务器：
<br><br>
<span style="margin-left:25px"></span>IIS10.0；浏览器：
<br><br>
<span style="margin-left:25px"></span>Microsoft Edge/Google Chrome；3.2 主要功能需求
<br><br>
<span style="margin-left:25px"></span>3.2.1 总述
<br><br>
<span style="margin-left:25px"></span>系统的功能框架图如下：
<br><br>
<span style="margin-left:25px"></span>图3.2.1.1 系统功能框架图
<br><br>
<span style="margin-left:25px"></span>根据上述功能框架图，对应的功能描述如下：
<br><br>
<span style="margin-left:25px"></span>表3.2.1.1 系统功能模块清单
<br><br>
<span style="margin-left:25px"></span>3.2.2 业务流程分析
<br><br>
<span style="margin-left:25px"></span>系统管理员添加教师和学生数据（姓名、密码和班级等）以后，教师登录之后，可以完善自己的详细信息和修改密码，上传课题以及查看选择自己课题或学则自己为导师的学生列表。
<br><br>
<span style="margin-left:25px"></span>系统管理员对选题进行审核，确定选题是否通过。学生登录系统，可以修改个人信息及密码，浏览可选题目信息及教师信息，选择课题或这上传自定义课题（需通过管理员审核）以及对选报情况进行查看。图3.2.2.1 业务流程示意图
<br><br>
<span style="margin-left:25px"></span>3.2.3 系统的数据流程分析
<br><br>
<span style="margin-left:25px"></span>系统管理员录入教师及学生初始信息。
<br><br>
<span style="margin-left:25px"></span>教师登录自己账号完善自己的个人信息，上传课题，管理员审核通过之后学生可以选择课题，不通过的则需继续修改。学生登录自己的账号之后，完善个人信息，查看可以选择的课题或者上传自定义课题（需通过管理员审核和选择导师），选择成功后完成论文并上传。数据流图的符号说明及数据流图如下图所示。图3.2.3.1 数据流图
<br><br>
<span style="margin-left:25px"></span>3.3 其他非功能性需求
<br><br>
<span style="margin-left:25px"></span>3.3.1 安全性需求
<br><br>
<span style="margin-left:25px"></span>用户认证需求：
<br><br>
<span style="margin-left:25px"></span>系统表示的用户和用户认证的方法；授权：
<br><br>
<span style="margin-left:25px"></span>如果认证成功，根据用户级别，允许其使用不同的功能；数据完整性和隐私需求：
<br><br>
<span style="margin-left:25px"></span>确保数据完整，不影响系统安全；3.3.2 用户认证需求
<br><br>
<span style="margin-left:25px"></span>系统使用一组用户ID和密码来表示一个用户。
<br><br>
<span style="margin-left:25px"></span>4 系统的设计与实现
<br><br>
<span style="margin-left:25px"></span>4.1系统设计思想
<br><br>
<span style="margin-left:25px"></span>一个计算机管理系统，必须有一个正确的设计指导思想，通过合理的选择系统架构，数据结构，
<br><br>
<span style="margin-left:25px"></span>网络结构，操作系统以及开发环境，构成一个完善的网络系统，才能充分发挥计算机信息管理的优势，根据学校教学管理工作的实际需求和实际情况，本系统的设计按照下述原则进行：4.1.1 实用为主
<br><br>
<span style="margin-left:25px"></span>根据实际需求功能情况，在Windows系统下系统根据需求目标，以方便为原则设计该毕业设计选题管理系统。
<br><br>
<span style="margin-left:25px"></span>将复杂的逻辑隐藏在大家司空见惯的Windows图形界面之下，使大家易于接受，方便教师和学生的使用，提高了该项工作的效率。4.1.2 先进灵活
<br><br>
<span style="margin-left:25px"></span>系统充分应用现有成熟的网络技术、软件开发技术，先进的浏览器和高性能的数据库，保持系统的先进灵活。
<br><br>
<span style="margin-left:25px"></span>4.1.3 稳定可靠
<br><br>
<span style="margin-left:25px"></span>选用C#编程语言和VS开发工具，利用成熟可靠的网络结构及安全可靠的数据库，保证系统的可靠性与容错性。
<br><br>
<span style="margin-left:25px"></span>4.1.4 维护扩展方便
<br><br>
<span style="margin-left:25px"></span>本系统的所有设计模块化进行，以提高系统的灵活性，方便以后业务的扩展和系统扩容，便于软硬件的维护和升级等，使系统能适应未来教学管理的需要。
<br><br>
<span style="margin-left:25px"></span>4.2 系统设计的目标
<br><br>
<span style="margin-left:25px"></span>“毕业设计选题管理系统”
<br><br>
<span style="margin-left:25px"></span>在互联网上完成了对学生选题、教师课题、用户基本信息的添加、删除、修改等工作。只要能上网的地方都能工作。该系统所要解决的问题主要有以下两个：解决繁琐的线下手工操作造成时间浪费和错误数据；
<br><br>
<span style="margin-left:25px"></span>解决学生、教师和学校三方的共同不畅；
<br><br>
<span style="margin-left:25px"></span>该系统的设计目的主要是使教师、学生、管理员的所有操作在互联网上完成
<br><br>
<span style="margin-left:25px"></span>4.3 系统功能模块设计
<br><br>
<span style="margin-left:25px"></span>进行了系统需求分析，将用户需求细分之后，系统功能模块设计就比较简单了。
<br><br>
<span style="margin-left:25px"></span>下面介绍一下模块总体流程和细分后的功能及流程：系统功能模块如图所示。
<br><br>
<span style="margin-left:25px"></span>图4.3.1 系统功能模块图
<br><br>
<span style="margin-left:25px"></span>4.4系统流程设计
<br><br>
<span style="margin-left:25px"></span>根据对系统功能模块的研究分析，做出如下模块流程设计。
<br><br>
<span style="margin-left:25px"></span>4.4.1 登陆模块
<br><br>
<span style="margin-left:25px"></span>提供用户登录系统
<br><br>
<span style="margin-left:25px"></span>4.4.2 管理员模块
<br><br>
<span style="margin-left:25px"></span>在此子系统中，管理员登陆之后可以修改密码，审核新题目，添加数据（教师和学生数据），
<br><br>
<span style="margin-left:25px"></span>查看教师、学生和题目信息（可以按条件查询及能将查询结果导出为 excel表），退出系统。处理流程如下：图4.4.2.1 管理员事务流程图
<br><br>
<span style="margin-left:25px"></span>4.4.3 教师模块
<br><br>
<span style="margin-left:25px"></span>在此子系统中，教师登陆之后可以查看/修改（电话、地址、邮箱、密码）个人信息，查看选自己为导师的学生列表，上传题目和查看题目（修改未审核通过的课题），退出系统。
<br><br>
<span style="margin-left:25px"></span>处理流程如下:图4.4.3.1 教师事务流程图
<br><br>
<span style="margin-left:25px"></span>4.4.4 学生模块
<br><br>
<span style="margin-left:25px"></span>在此子系统中，学生登陆之后可以查看/修改（电话、地址、邮箱、密码）个人信息，上传和下载论文，选择题目和上传自定义题目，退出系统。
<br><br>
<span style="margin-left:25px"></span>处理流程如下:图4.4.4.1 学生事务流程图
<br><br>
<span style="margin-left:25px"></span>4.5 系统架构设计
<br><br>
<span style="margin-left:25px"></span>4.5.1 系统架构
<br><br>
<span style="margin-left:25px"></span>该系统采用“高内聚，低耦合”的三层架构来实现，将业务划分为界面层、业务逻辑层、数据访问层。
<br><br>
<span style="margin-left:25px"></span>4.5.2 各层的实现
<br><br>
<span style="margin-left:25px"></span>Model层：
<br><br>
<span style="margin-left:25px"></span>图4.5.2.1 Model层类图
<br><br>
<span style="margin-left:25px"></span>BLL层：
<br><br>
<span style="margin-left:25px"></span>图4.5.2.2 BLL层类图
<br><br>
<span style="margin-left:25px"></span>DAL层：
<br><br>
<span style="margin-left:25px"></span>图4.5.2.3 DAL层类图
<br><br>
<span style="margin-left:25px"></span>4.6 系统界面设计
<br><br>
<span style="margin-left:25px"></span>此次设计该系统，采用了Web前端CSS框架Bootstrap。
<br><br>
<span style="margin-left:25px"></span>Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。
<br><br>
<span style="margin-left:25px"></span>Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。它由Twitter的设计师Mark Otto和Jacob Thornton合作开发，是一个CSS/HTML框架。Bootstrap提供了优雅的HTML和CSS规范，它即是由动态CSS语言Less写成。本次开发的重点在于实现功能，所以界面就稍稍做了一下美化。
<br><br>
<span style="margin-left:25px"></span>例如登陆界面和管理员主界面如下图所示：图4.6.1 登录界面
<br><br>
<span style="margin-left:25px"></span>图4.6.2 管理员审核标题界面
<br><br>
<span style="margin-left:25px"></span>5 数据库设计
<br><br>
<span style="margin-left:25px"></span>“毕业设计选题管理系统”
<br><br>
<span style="margin-left:25px"></span>使用SQL Server 2014为此次的数据库管理系统。在建立数据库的时候，将系统链接的数据库命名为ThesisManage。
<br><br>
<span style="margin-left:25px"></span>通过对系统需求的分析，需要在数据库中建立6个表：UserRole（用户角色表）、Admin（管理员表）、Teacher（教师表）、Student（学生表）、Thesis（论文表）、Title（课题表）。5.1 系统E-R图
<br><br>
<span style="margin-left:25px"></span>实体E-R图表示了实体间的对应关系，它和数据流程图一起组成了系统的逻辑模型，同时也便于用户理解和验证。
<br><br>
<span style="margin-left:25px"></span>系统E-R图如下：图5.1.1 系统E-R图
<br><br>
<span style="margin-left:25px"></span>系统的主要实体间的关系如图：
<br><br>
<span style="margin-left:25px"></span>图5.1.2 实体关系图
<br><br>
<span style="margin-left:25px"></span>5.2 实体列表
<br><br>
<span style="margin-left:25px"></span>根据系统E-R图生成的实体主要有：
<br><br>
<span style="margin-left:25px"></span>外部实体：管理员、教师、学生；内部实体：用户角色、论文和课题。实体列表如下：表5.2.1 实体属性（用户类型【UserRole】）
<br><br>
<span style="margin-left:25px"></span>表5.2.2 实体属性（管理员【Admin】）
<br><br>
<span style="margin-left:25px"></span>表5.2.3 实体属性（教师【Teacher】）
<br><br>
<span style="margin-left:25px"></span>表5.2.4 实体属性（学生【Student】）
<br><br>
<span style="margin-left:25px"></span>表5.1.5 实体属性（课题【Title】）
<br><br>
<span style="margin-left:25px"></span>表5.1.6实体属性（论文【Thesis】）
<br><br>
<span style="margin-left:25px"></span>6 编码
<br><br>
<span style="margin-left:25px"></span>6.1 登陆验证
<br><br>
<span style="margin-left:25px"></span>用户在登录界面输入登陆账号密码，选择用户类型之后。
<br><br>
<span style="margin-left:25px"></span>系统判断用户名密码是否正确，然后根据不同的用户类型跳转到不同的界面。如果输入错误，系统将会提示。如果登录之后长时间没有操作系统会因session过期而跳回登陆界面。登录界面如下图：
<br><br>
<span style="margin-left:25px"></span>图6.1.1 登陆界面
<br><br>
<span style="margin-left:25px"></span>管理员登陆验证（其他类似）主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public string AdminSSO(string loginID， string pass){
<br><br>
<span style="margin-left:25px"></span>Admin admin=adminService.GetAdminByID(loginID);
<br><br>
<span style="margin-left:25px"></span>string promptingMessage = string.Empty;
<br><br>
<span style="margin-left:25px"></span>if (!
<br><br>
<span style="margin-left:25px"></span>string.IsNullOrEmpty(admin.LoginID)){if (pass == admin.LoginPass){
<br><br>
<span style="margin-left:25px"></span>promptingMessage = ”成功”;
<br><br>
<span style="margin-left:25px"></span>else{
<br><br>
<span style="margin-left:25px"></span>promptingMessage = ”密码错误！
<br><br>
<span style="margin-left:25px"></span>”;}}else{
<br><br>
<span style="margin-left:25px"></span>promptingMessage = ”该用户名不存在！
<br><br>
<span style="margin-left:25px"></span>”;return promptingMessage;
<br><br>
<span style="margin-left:25px"></span> }6.2 用户的添加和信息维护
<br><br>
<span style="margin-left:25px"></span>管理员可以选择单条或这批量添加（从Excel表中读取，Excel表的后缀名只能为.xls）管理员、教师和学生信息。
<br><br>
<span style="margin-left:25px"></span>添加之前会验证账号是否存在，如果存在则会添加失败。批量添加时只能同时批量添加同一类用户。单挑添加时：
<br><br>
<span style="margin-left:25px"></span>管理员：
<br><br>
<span style="margin-left:25px"></span>需要填写管理员登陆账号，默认密码为111111；教师：
<br><br>
<span style="margin-left:25px"></span>需要填写工号（登陆账号）和姓名，默认密码为222222；学生：
<br><br>
<span style="margin-left:25px"></span>需要填写学号（登陆账号）、姓名和班级，默认密码为333333；批量添加时，从Excel表的Sheet1的第一行开始填写，一行代表一条数据，Excel表的格式如下
<br><br>
<span style="margin-left:25px"></span>图6.2.1 批量添加时Excel的格式图
<br><br>
<span style="margin-left:25px"></span>添加用户信息的界面如下：
<br><br>
<span style="margin-left:25px"></span>图6.2.2 添加用户数据
<br><br>
<span style="margin-left:25px"></span>单条添加主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int AddStudent(string studentID，string studentName，string studentClass，int roleID){
<br><br>
<span style="margin-left:25px"></span>string sql = string.Format(”INSERT INTO Student
<br><br>
<span style="margin-left:25px"></span>(StudentID，StudentName，StudentClass，SRID，StudentPass，SudentState)
<br><br>
<span style="margin-left:25px"></span>VALUES (’{0}’，’{1}’，’{2}’，{3}，’333333’，’0’)”， studentID， studentName， studentClass， roleID);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>批量添加的主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int AddAdmins(String source， int roleID) {
<br><br>
<span style="margin-left:25px"></span>int num = 0;
<br><br>
<span style="margin-left:25px"></span>try{
<br><br>
<span style="margin-left:25px"></span>string strConn = string.Format(”Provider=Microsoft.Jet.OLEDB.4.0;
<br><br>
<span style="margin-left:25px"></span>Data Source={0};
<br><br>
<span style="margin-left:25px"></span>Extended Properties= ’Excel 8.0;Imex=2;HDR=No;’”， source);OleDbConnection cnnxls = new OleDbConnection(strConn);
<br><br>
<span style="margin-left:25px"></span>OleDbDataAdapter myDa = new OleDbDataAdapter(”select * from [Sheet1$]”， cnnxls);
<br><br>
<span style="margin-left:25px"></span>DataSet ds = new DataSet();
<br><br>
<span style="margin-left:25px"></span>myDa.Fill(ds);
<br><br>
<span style="margin-left:25px"></span>if (ds.Tables[0].Rows.Count ] 0) {
<br><br>
<span style="margin-left:25px"></span>string strSql = ””;
<br><br>
<span style="margin-left:25px"></span>for (int i = 0;
<br><br>
<span style="margin-left:25px"></span> i [ ds.Tables[0].Rows.Count; i++){strSql += ”INSERT INTO Admin(LoginID，ARID，LoginPass) VALUES (’”;
<br><br>
<span style="margin-left:25px"></span>strSql += ds.Tables[0].Rows[i].ItemArray[0].ToString() + ”’，’”;
<br><br>
<span style="margin-left:25px"></span>strSql += roleID + ”’，’”;
<br><br>
<span style="margin-left:25px"></span>strSql += ”111111” + ”’)”;
<br><br>
<span style="margin-left:25px"></span> }num = DBHelper.ExecuteCommand(strSql);
<br><br>
<span style="margin-left:25px"></span>}}catch (Exception e){
<br><br>
<span style="margin-left:25px"></span>Console.WriteLine(e.Message);
<br><br>
<span style="margin-left:25px"></span> }return num;
<br><br>
<span style="margin-left:25px"></span>6.3 用户信息的修改
<br><br>
<span style="margin-left:25px"></span>用户登录以后可以修改自己的个人信息。
<br><br>
<span style="margin-left:25px"></span>根据用户类型的不同，可以修改的内容也有所不一样。管理员只能修改登录密码，教师和学生可以修改个人信息中的电话、地址、邮箱和密码。修改密码时需要验证原密码。管理员修改密码的界面如下（其他类似）：
<br><br>
<span style="margin-left:25px"></span>图6.3.1 管理员修改密码界面
<br><br>
<span style="margin-left:25px"></span>主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int ModifiyPassword(string newPassword， string loginID){
<br><br>
<span style="margin-left:25px"></span>string sql = string.Format(”UPDATE Admin SET LoginPass=’{0}’
<br><br>
<span style="margin-left:25px"></span>WHERE LoginID=’{1}’”， newPassword， loginID);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>教师修改个人信息的界面如下（学生类似）：
<br><br>
<span style="margin-left:25px"></span>图6.3.2 教师修改个人信息图
<br><br>
<span style="margin-left:25px"></span>主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int Modifiy(string teacherAddress，string teacherMail，string teacherPhone){
<br><br>
<span style="margin-left:25px"></span>string sql=string.Format(”UPDATE Teacher SET TeacherAddress=’{0}’，
<br><br>
<span style="margin-left:25px"></span>TeacherMail=’{1}’，TeacherPhone=’{2}’”， teacherAddress， teacherMail， teacherPhone);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span> }6.4 课题的上传和审核以及修改
<br><br>
<span style="margin-left:25px"></span>教师或者学生上传课题之后，管理员处会显示待审核的课题，管理员可以选择审核通过或者不通过，教师上传的课题教师可再进行修改；
<br><br>
<span style="margin-left:25px"></span>学生上传的课题审核不通过，只能由上传时选择的老师进行修改。通过之后，学生可以选择该老师上传的课题或者上传的自定义课题审核通过之后默认选择该课题且课题通过之后相关信息不能更改。学生上传自定义课题的界面与教师上传课题的界面类似，只是可选人数变成选择老师，教师上传课题的界面如下：
<br><br>
<span style="margin-left:25px"></span>图6.4.1 教师上传课题界面
<br><br>
<span style="margin-left:25px"></span>主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int TeacherAddTitle(string titleName， int TEID， string Description， int counts){
<br><br>
<span style="margin-left:25px"></span>string sql = string.Format(”INSERT INTO Title
<br><br>
<span style="margin-left:25px"></span>(TitleName，Counts，State，Description，TeacherID，HasChooseNum)
<br><br>
<span style="margin-left:25px"></span>VALUES (’{0}’，’{1}’，0，’{2}’，’{3}’，0)”， titleName， counts， Description， TEID);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>管理员审核课题的界面如下：
<br><br>
<span style="margin-left:25px"></span>图6.4.2 管理员审核标题列表界面图
<br><br>
<span style="margin-left:25px"></span>图6.4.3 管理员审核课题详细界面
<br><br>
<span style="margin-left:25px"></span>主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int ModifiyTitleState(int titleID){
<br><br>
<span style="margin-left:25px"></span>string sql = string.Format(”UPDATE Title SET State=1 WHERE TitleID={0}”， titleID);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>public int ModifiyTitleUnState(int titleID){
<br><br>
<span style="margin-left:25px"></span>string sql = string.Format(”UPDATE Title SET State=2 WHERE TitleID={0}”， titleID);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>教师查看上传的课题的相关信息界面如下：
<br><br>
<span style="margin-left:25px"></span>图6.4.4 教师查看上传的课题的相关信息界面
<br><br>
<span style="margin-left:25px"></span>教师修改未审核通过的标题界面如下：
<br><br>
<span style="margin-left:25px"></span>图6.4.5 教师修改未审核通过的标题信息界面图
<br><br>
<span style="margin-left:25px"></span>主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int ModifiyTitle(string titleName， string Description， int counts， int titleID){
<br><br>
<span style="margin-left:25px"></span>string sql = string.Format(”UPDATE Title SET TitleName =’{0}’，
<br><br>
<span style="margin-left:25px"></span>Description=’{1}’，Counts={2} WHERE TitleID={3}”， titleName， Description， counts， titleID);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>6.5 学生选择课题
<br><br>
<span style="margin-left:25px"></span>学生可以选择上传自定义课题或这选择老师上传的课题，不过当选择了老师上传的课题以后就不能上传自定义课题；
<br><br>
<span style="margin-left:25px"></span>选择上传自定义课题通过审核之后就不能选择其他的课题或上传新的自定义课题。学生选择课题的界面如下：图6.5.1 学生可选择的题目列表界面图
<br><br>
<span style="margin-left:25px"></span>图6.5.2 某一课题的相信信息界面图
<br><br>
<span style="margin-left:25px"></span>主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int ModifiyStuSate(int sudentState， int titleID， string studentID){
<br><br>
<span style="margin-left:25px"></span>string sql = string.Format(”UPDATE Student SET SudentState={0}，STitleID={1}
<br><br>
<span style="margin-left:25px"></span>WHERE StudentID=’{2}’”， sudentState， titleID， studentID);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>public int ModifiyTitleHasChooseNum(int titleID) {
<br><br>
<span style="margin-left:25px"></span>string sql = string.Format(”UPDATE Title SET HasChooseNum=HasChooseNum+1
<br><br>
<span style="margin-left:25px"></span>WHERE TitleID={0}”， titleID);
<br><br>
<span style="margin-left:25px"></span>int num = DBHelper.ExecuteCommand(sql);
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>6.6 学生上传下载论文
<br><br>
<span style="margin-left:25px"></span>学生选择课题之后进行毕业设计，完成之后上传毕业论文。
<br><br>
<span style="margin-left:25px"></span>若没上传论文选择下载论文会提示还未上传论文。如果之前上传过，再次上传会删除之前上传的文档。学生上传下载论文的界面如下：图6.6.1 学生上传论文界面图
<br><br>
<span style="margin-left:25px"></span>图6.6.2 学生下载论文界面图
<br><br>
<span style="margin-left:25px"></span>主要代码如下：
<br><br>
<span style="margin-left:25px"></span>public int InsertThesis(Thesis thesis){
<br><br>
<span style="margin-left:25px"></span>SqlCommand cmd = new SqlCommand();
<br><br>
<span style="margin-left:25px"></span>SqlConnection conn = DBHelper.Connection;
<br><br>
<span style="margin-left:25px"></span>cmd.Connection = conn;
<br><br>
<span style="margin-left:25px"></span>cmd.CommandText = ”INSERT INTO Thesis(StudentID，TitleID，PublishDate，Contents)
<br><br>
<span style="margin-left:25px"></span>VALUES (@StudentID，@TitleID，@PublishDate，@Contents)”;
<br><br>
<span style="margin-left:25px"></span>SqlParameter SID = new SqlParameter(”@StudentID”， SqlDbType.Int);
<br><br>
<span style="margin-left:25px"></span>SID.Value = thesis.Student.SID;
<br><br>
<span style="margin-left:25px"></span>cmd.Parameters.Add(SID);
<br><br>
<span style="margin-left:25px"></span>SqlParameter TitleID = new SqlParameter(”@TitleID”， SqlDbType.Int);
<br><br>
<span style="margin-left:25px"></span>TitleID.Value = thesis.Title.TitleID;
<br><br>
<span style="margin-left:25px"></span>cmd.Parameters.Add(TitleID);
<br><br>
<span style="margin-left:25px"></span>SqlParameter PublishDate = new SqlParameter(”@PublishDate”， SqlDbType.VarChar， 50);
<br><br>
<span style="margin-left:25px"></span>PublishDate.Value = thesis.PublishDate;
<br><br>
<span style="margin-left:25px"></span>cmd.Parameters.Add(PublishDate);
<br><br>
<span style="margin-left:25px"></span>//添加word文件
<br><br>
<span style="margin-left:25px"></span>SqlParameter Contents = new SqlParameter(”@Contents”， SqlDbType.Image);
<br><br>
<span style="margin-left:25px"></span>Contents.Value = thesis.Content;
<br><br>
<span style="margin-left:25px"></span>cmd.Parameters.Add(Contents);
<br><br>
<span style="margin-left:25px"></span>int num = cmd.ExecuteNonQuery();
<br><br>
<span style="margin-left:25px"></span>conn.Close();
<br><br>
<span style="margin-left:25px"></span>return num;
<br><br>
<span style="margin-left:25px"></span>6.7 查看系统信息（学生信息/教师信息等）并导出Excel表
<br><br>
<span style="margin-left:25px"></span>管理员进入系统之后可以查看教师信息（支持按照教师姓名模糊查询）、学生信息（支持按照班级和是否选题进行筛选）
<br><br>
<span style="margin-left:25px"></span>、标题信息（支持按照题目是否选满、审核状态和教师姓名进行筛选）并导出 Excel表。教师登录系统之后可以查看选择自己上传的课题的学生或选择自己为导师的学生列表；学生登录系统之后可以查看审核通过的课题列表。管理员查看教师信息的界面如下（其他类似）：
<br><br>
<span style="margin-left:25px"></span>图6.7.1 查看教师信息界面图
<br><br>
<span style="margin-left:25px"></span>导出Excel表的主要代码如下：
<br><br>
<span style="margin-left:25px"></span>protected void btnExcel_Click(object sender， EventArgs e){
<br><br>
<span style="margin-left:25px"></span>DataSet dataset = teacherManage.GetTeacher(Sql);
<br><br>
<span style="margin-left:25px"></span>DataTable table = dataset.Tables[”teacher”];
<br><br>
<span style="margin-left:25px"></span>System.IO.StringWriter sw = new System.IO.StringWriter();
<br><br>
<span style="margin-left:25px"></span>sw.WriteLine(”教师号\t教师姓名\t联系方式\t邮箱”);
<br><br>
<span style="margin-left:25px"></span>foreach (DataRow dr in table.Rows){
<br><br>
<span style="margin-left:25px"></span>sw.WriteLine(dr[”教师号”] + ”\t ” + dr[”教师姓名”] + ”\t” + dr[”联系方式”] + ”\t” + dr[”邮箱”]);
<br><br>
<span style="margin-left:25px"></span>sw.Close();
<br><br>
<span style="margin-left:25px"></span>Response.Charset = ”GBK”;
<br><br>
<span style="margin-left:25px"></span>Response.AddHeader(”Content-Disposition”， ”attachment;
<br><br>
<span style="margin-left:25px"></span>filename=” +HttpUtility.UrlEncode(”教师信息表.xls”， System.Text.Encoding.GetEncoding(”UTF-8”)));
<br><br>
<span style="margin-left:25px"></span>Response.ContentType = ”application/ms-excel”;
<br><br>
<span style="margin-left:25px"></span>Response.ContentEncoding = System.Text.Encoding.GetEncoding(”GBK”);
<br><br>
<span style="margin-left:25px"></span>Response.Write(sw);
<br><br>
<span style="margin-left:25px"></span>Response.End();
<br><br>
<span style="margin-left:25px"></span>7 系统测试
<br><br>
<span style="margin-left:25px"></span>7.1 测试目的
<br><br>
<span style="margin-left:25px"></span>程序测试就是在程序正式投入运行之前，对程序的需求分析、设计过程和编码进行最重的重审，保证程序正式运行之后能够尽量减少出故障的机率。
<br><br>
<span style="margin-left:25px"></span>程序测试是为了发现错误而进行的纠错过程。
<br><br>
<span style="margin-left:25px"></span>7.2 测试环境
<br><br>
<span style="margin-left:25px"></span>服务器端：
<br><br>
<span style="margin-left:25px"></span>Windows10x64 IIS10;客户端：
<br><br>
<span style="margin-left:25px"></span>Windows10x64 Internet Edge7.3 测试方法
<br><br>
<span style="margin-left:25px"></span>程序测试的方法分为两大类：
<br><br>
<span style="margin-left:25px"></span>白盒测试和黑盒测试。在此只进行黑河测试。7.4 测试实例
<br><br>
<span style="margin-left:25px"></span>7.4.1 登录
<br><br>
<span style="margin-left:25px"></span>测试内容：
<br><br>
<span style="margin-left:25px"></span>测试系统登录是否能够正常运行；测试过程：
<br><br>
<span style="margin-left:25px"></span>在浏览器中输入主页，出现登陆界面，管理员账户（账号：admin，密码：111111）进行登录；测试结果：
<br><br>
<span style="margin-left:25px"></span>登录成功。进入管理员界面。7.4.2 修改用户密码
<br><br>
<span style="margin-left:25px"></span>测试内容：
<br><br>
<span style="margin-left:25px"></span>测试修改用户密码是否能正常运行；测试过程：
<br><br>
<span style="margin-left:25px"></span>使用管理员账号登陆之后，点击修改密码，进入修改密码界面后按要求进行操作；测试结果：
<br><br>
<span style="margin-left:25px"></span>修改密码成功。7.4.3 添加用户
<br><br>
<span style="margin-left:25px"></span>测试内容：
<br><br>
<span style="margin-left:25px"></span>测试管理员添加用户能否正常运行；测试过程：
<br><br>
<span style="margin-left:25px"></span>使用管理员账户登录之后，进入添加数据界面。选择添加教师，单条添加一名教师；之后选择添加学生，选择通过Excel表批量添加；测试结果：
<br><br>
<span style="margin-left:25px"></span>单条添加教师与批量添加学生均成功。7.4.4 查看系统信息并导出Excel表
<br><br>
<span style="margin-left:25px"></span>测试内容：
<br><br>
<span style="margin-left:25px"></span>测试管理员查看用户信息并导出Excel表测试过程：
<br><br>
<span style="margin-left:25px"></span>使用管理员账户登录后，进入教师信息页面，查看所有教师信息并导出Excel表；测试结果：
<br><br>
<span style="margin-left:25px"></span>查看教师信息成功，导出Excel表成功。7.4.5 教师上传课题
<br><br>
<span style="margin-left:25px"></span>测试内容：
<br><br>
<span style="margin-left:25px"></span>测试教师上传课题是否正常运行；测试过程：
<br><br>
<span style="margin-left:25px"></span>使用教师账户登录之后，进入上传课题界面，按要求填写之后，上传课题；测试结果：
<br><br>
<span style="margin-left:25px"></span>上传成功。7.4.6 管理员审核标题
<br><br>
<span style="margin-left:25px"></span>测试内容：
<br><br>
<span style="margin-left:25px"></span>测试管理员审核上传的课题是否正常运行；测试过程：
<br><br>
<span style="margin-left:25px"></span>使用管理员账户登录，查看未审核的标题，点击审核通过和不通过；测试结果：
<br><br>
<span style="margin-left:25px"></span>审核通过与不通过均成功。7.4.7 学生选择课题
<br><br>
<span style="margin-left:25px"></span>测试内容：
<br><br>
<span style="margin-left:25px"></span>测试学生选择教师上传的审核通过的课题是否正常运行测试过程：
<br><br>
<span style="margin-left:25px"></span>使用学生账户登录，进入选择课题界面，选择一个课题，点击选题；测试结果：
<br><br>
<span style="margin-left:25px"></span>选题成功，程序运行正常。7.5 测试结果分析
<br><br>
<span style="margin-left:25px"></span>经过一系列测试，系统所有功能均能正常运行，可以投入使用。
<br><br>
<span style="margin-left:25px"></span>结 论
<br><br>
<span style="margin-left:25px"></span>结果半个学期左右的设计开发，
<br><br>
<span style="margin-left:25px"></span>“毕业设计选题管理系统”基本开发完成。其基本功能全部实现，符合系统开发需求，能够顺利完成毕业设计课题的上传审核管理和选择。但是由于毕业设计的时间较短，在此期间还许多其他的工作要做，所以还有许多地方需要进一步的完善和改进。通过对该系统的从零开始的设计和开发使我对编程有了一种全新的理解：
<br><br>
<span style="margin-left:25px"></span>追求实用才是学好开发的关键。所有的技术都是用来解决实际问题的，具体的问题具体分析，每个问题的解决方法都是不一样的。面向对象编程就一定要严格按照面向“对象”的要求来进行开发。任何事情我们不能一定要追求一种将所有的事情在一个系统里面都能解决的结果，这样做的行为只会导致我们最终失败或者浪费时间。技术都是不断进步的，我所开发的系统也要在技术更新中不断完善。在使用参考书籍的过程中，书中的技术方法和设计思想值得进一步的学习研究。本文所做的主要工作主要有以下几点：
<br><br>
<span style="margin-left:25px"></span>介绍大学毕业设计选题管理的现状及需求；
<br><br>
<span style="margin-left:25px"></span>介绍系统开发环境和工具；
<br><br>
<span style="margin-left:25px"></span>介绍系统设计目标及详细设计过程以及数据库与代码实现；
<br><br>
<span style="margin-left:25px"></span>今后进一步的研究方向：
<br><br>
<span style="margin-left:25px"></span>对页面进行美化，重新设计UI，符合大家的审美；
<br><br>
<span style="margin-left:25px"></span>设计更多接口，使系统能与学校管理系统数据库进行对接；
<br><br>
<span style="margin-left:25px"></span>进行程序进行优化使系统占用更少的资源运行更加完美快速；
<br><br>
<span style="margin-left:25px"></span>参 考 文 献
<br><br>
<span style="margin-left:25px"></span>[1] 黄梯云．管理信息系统[M]．北京：
<br><br>
<span style="margin-left:25px"></span>高等教育出版社，2005：139-141．[2] 龚小勇．关系数据库与SQL Server2000[M]．北京：
<br><br>
<span style="margin-left:25px"></span>机械工业出版社，2002：20-23．[3] 李玉梅．动态WEB数据库应用研究昆明理工大学硕士学位论文，2004：
<br><br>
<span style="margin-left:25px"></span>4-12．[4] 萨师煊，王珊．数据库系统概论[M]．北京：
<br><br>
<span style="margin-left:25px"></span>高等教育出版社，2002：203-242．[5] 杨浩．JavaScript入门与提高[M]．北京：
<br><br>
<span style="margin-left:25px"></span>清华大学出版社，2004：87-120．[6] 汪晓平，钟军．ASP网络开发技术[M]．北京：
<br><br>
<span style="margin-left:25px"></span>人民邮电出版社，2004：75-92．[7] 孙伟，周良．计算机应用研究：
<br><br>
<span style="margin-left:25px"></span>ASP技术实现动态权限管理[J]．中国出版，2005（4）：18-19．[8] 北京博彦科技发展有限责任公司．ASP编程高手[M]．北京：
<br><br>
<span style="margin-left:25px"></span>北京大学出版社，2002：122-125．[9] 陈建伟，李美军，施建强．ASP动态网站开发教程[M]．北京：
<br><br>
<span style="margin-left:25px"></span>科学出版社，2005：94-99．[10] 于鹏．VBScript/ASP网页设计语言教程[M]．北京：
<br><br>
<span style="margin-left:25px"></span>电子工业出版社，2004：92-101．[11] 赵杰等．SQL SERVER数据库管理设计与实现教程[M]．北京：
<br><br>
<span style="margin-left:25px"></span>清华大学出版社，2004：33-74．[12] Deborah S Ray Eric，Ray J．HTML4.0从入门到精通[M]．北京：
<br><br>
<span style="margin-left:25px"></span>电子工业出版社，2000：114-120．[13] 陈峰棋．ASP与SQL网站数据库程序设计[M]．北京：
<br><br>
<span style="margin-left:25px"></span>科学出版社，2004：43-51．[14] 梁景红．网站设计与网页设计配色[M]．北京：
<br><br>
<span style="margin-left:25px"></span>人民邮电出版社，2005：60-67[15] 内格尔 (Nagel，C.) .
<br><br>
<span style="margin-left:25px"></span>C#高级编程(第9版).清华大学出版社，2014.10.1[16] 盖洛德 (Gaylord，J.N.) .
<br><br>
<span style="margin-left:25px"></span>ASP.NET 4.5 高级编程（第8版）.清华大学出版社，2014.5.1[17] Jon Duckett.HTML CSS设计与构建网站.清华大学出版社，2013.1
<br><br>
<span style="margin-left:25px"></span>[18] Paul Wilton / John Colby.SQL入门经典清华大学出版社，2006.1
<br><br>
<span style="margin-left:25px"></span>[19] 勒布兰克（Patrick LeBlanc）.微软技术丛书：
<br><br>
<span style="margin-left:25px"></span>SQL Server 2012从入门到精通.清华大学出版社，2014.01.01[20] XiaoYu.
<br><br>
<span style="margin-left:25px"></span> Development of Management System in Graduation Practice Process Based on Web[J]. Procedia Engineering 15 ，2011: 693-698致 谢
<br><br>
<span style="margin-left:25px"></span>经过半个学期左右的设计和开发，我的毕业设计在济南大学完成。
<br><br>
<span style="margin-left:25px"></span>在整个系统的开发过程中，老师和同学给了我很大的帮助。感谢我的指导老师刘培伟、徐龙玺老师，在毕业设计期间，他们的细心指导和宝贵意见，使我的论文更加规范，更加符合规则。真心谢谢！还有我要感谢全体同学的鼓励和帮助。最后感谢理解、帮助、支持过我的各位同学及室友。
<br><br>
<span style="margin-left:25px"></span>衷心的感谢你们。谢谢在我做毕业设计过程中所有的人和事。
<br><br>
<span style="margin-left:25px"></span>附 录
<br><br>
<span style="margin-left:25px"></span>毕业设计涉及到的图表.vsdx
<br><br>
<span style="margin-left:25px"></span>济南大学2012级毕业设计题目申报表(JNDX-CST-2012-20121214135-计软1204-王顺安).xlsx
<br><br>
<span style="margin-left:25px"></span>济南大学2012级毕业设计任务书（JNDX-CST-2012-20121214135-计软1204-王顺安）.docx
<br><br>
<span style="margin-left:25px"></span>济南大学2012级毕业设计方案（JNDX-CST-2012-20121214135-计软1204-王顺安）.docx
<br><br>
<span style="margin-left:25px"></span>济南大学2012级毕业设计外文资料翻译_文献外文原文（JNDX-CST-2012-20121214135-计软1204-王顺安）.pdf
<br><br>
<span style="margin-left:25px"></span>济南大学2012级毕业设计外文资料翻译_文献中文译文(JNDX-CST-2012-20121214135-计软1204-王顺安).docx
<br><br>
<span style="margin-left:25px"></span>序号角色适用人员职责描述
<br><br>
<span style="margin-left:25px"></span>1管理员院校的管理人员网站日常维护；
<br><br>
<span style="margin-left:25px"></span>用户的添加、课题的审核2教师授课教师课题的上传和学生课题的相关管理
<br><br>
<span style="margin-left:25px"></span>3学生毕业生课题的选择和论文的上传
<br><br>
<span style="margin-left:25px"></span>序号功能子功能功能描述
<br><br>
<span style="margin-left:25px"></span>个人信息修改密码修改个人密码
<br><br>
<span style="margin-left:25px"></span>课题审核审核新课题审核新课题
<br><br>
<span style="margin-left:25px"></span>添加管理员
<br><br>
<span style="margin-left:25px"></span>数据管理添加教师添加用户
<br><br>
<span style="margin-left:25px"></span>1（管理员）添加学生
<br><br>
<span style="margin-left:25px"></span>教师信息
<br><br>
<span style="margin-left:25px"></span>系统信息学生信息查看人员信息
<br><br>
<span style="margin-left:25px"></span>课题信息
<br><br>
<span style="margin-left:25px"></span>退出系统退出系统退出到登陆界面
<br><br>
<span style="margin-left:25px"></span>查看信息查看个人信息
<br><br>
<span style="margin-left:25px"></span>个人信息修改信息修改个人信息
<br><br>
<span style="margin-left:25px"></span>修改密码修改登陆密码
<br><br>
<span style="margin-left:25px"></span>2（教师）我的学生学生列表查看学生列表
<br><br>
<span style="margin-left:25px"></span>题目管理上传题目上传题目
<br><br>
<span style="margin-left:25px"></span>查看题目查看题目
<br><br>
<span style="margin-left:25px"></span>退出系统退出系统退出到登陆界面
<br><br>
<span style="margin-left:25px"></span>查看信息查看个人信息
<br><br>
<span style="margin-left:25px"></span>个人信息修改信息修改个人信息
<br><br>
<span style="margin-left:25px"></span>修改密码修改登录密码
<br><br>
<span style="margin-left:25px"></span>3（学生）论文信息上传论文上传完成的论文
<br><br>
<span style="margin-left:25px"></span>下载论文下载已上传的论文
<br><br>
<span style="margin-left:25px"></span>题目信息上传自定义课题上传自己的课题
<br><br>
<span style="margin-left:25px"></span>选择课题选择老师的课题
<br><br>
<span style="margin-left:25px"></span>退出系统退出系统退出到登陆界面
<br><br>
<span style="margin-left:25px"></span>描述属性代码类型是否主键是否强制
<br><br>
<span style="margin-left:25px"></span>用户类型IDUIDint是是
<br><br>
<span style="margin-left:25px"></span>用户类型名称RoleNamenvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>描述属性代码类型是否主键是否强制
<br><br>
<span style="margin-left:25px"></span>管理员内码AIDint是是
<br><br>
<span style="margin-left:25px"></span>用户类型IDARIDint否是
<br><br>
<span style="margin-left:25px"></span>登陆账号LoginIDnvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>登陆密码LoginPassnvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>描述属性代码类型是否主键是否强制
<br><br>
<span style="margin-left:25px"></span>教师内码TEIDint是是
<br><br>
<span style="margin-left:25px"></span>用户类型IDTRIDint否是
<br><br>
<span style="margin-left:25px"></span>登陆账号TeacherIDnvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>登陆密码TeacherPassnvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>姓名TeacherNamenvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>电话TeacherPhonenvarchar(50)否否
<br><br>
<span style="margin-left:25px"></span>邮箱TeacherMailnvarchar(50)否否
<br><br>
<span style="margin-left:25px"></span>地址TeacherAddressnvarchar(50)否否
<br><br>
<span style="margin-left:25px"></span>选题是否可选TeacherStateint否否
<br><br>
<span style="margin-left:25px"></span>描述属性代码类型是否主键是否强制
<br><br>
<span style="margin-left:25px"></span>学生内码SIDint是是
<br><br>
<span style="margin-left:25px"></span>用户类型IDSRIDint否是
<br><br>
<span style="margin-left:25px"></span>登陆账号StudentIDnvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>登陆密码StudentPassnvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>姓名StudentNamenvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>班级StudentClassnvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>电话StudentPhonenvarchar(50)否否
<br><br>
<span style="margin-left:25px"></span>邮箱StudentMailnvarchar(50)否否
<br><br>
<span style="margin-left:25px"></span>地址StudentAddressnvarchar(255)否否
<br><br>
<span style="margin-left:25px"></span>是否StudentStateint否否
<br><br>
<span style="margin-left:25px"></span>课题IDSTitleIDint否否
<br><br>
<span style="margin-left:25px"></span>描述属性代码类型是否主键是否强制
<br><br>
<span style="margin-left:25px"></span>课题内码TitleIDint是是
<br><br>
<span style="margin-left:25px"></span>课题名称TitleNamenvarchar(50)否是
<br><br>
<span style="margin-left:25px"></span>描述Descriptionnvarchar(255)否是
<br><br>
<span style="margin-left:25px"></span>可选数量Countsint否是
<br><br>
<span style="margin-left:25px"></span>已选数量HasChooseNumint否否
<br><br>
<span style="margin-left:25px"></span>状态Stateint否是
<br><br>
<span style="margin-left:25px"></span>教师登录账号TeacherIDint否否
<br><br>
<span style="margin-left:25px"></span>学生登录账号StudentIDint否否
<br><br>
<span style="margin-left:25px"></span>描述属性代码类型是否主键是否强制
<br><br>
<span style="margin-left:25px"></span>论文IDThesisIDint是是
<br><br>
<span style="margin-left:25px"></span>课题内码TitleIDint否是
<br><br>
<span style="margin-left:25px"></span>学生内码StudentIDint否是
<br><br>
<span style="margin-left:25px"></span>内容Contentsimage否是
<br><br>
<span style="margin-left:25px"></span>上传时间Publishdatetime否是
<br><br>
<span style="margin-left:25px"></span>

<br>
<div style="margin-left:8px">

<div style="text-align:center;background-color:#CA122C;margin-top:30px;overflow:hidden;">
<a href="http://www.paperpass.com/publish/index?from=ppreport_banner" target="_blank" style="display:block;"><img height="180" src="http://file.paperpass.com/images/fabiao.jpg"></a>
</div>

</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2016 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
